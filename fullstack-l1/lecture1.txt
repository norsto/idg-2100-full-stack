JavaScript

JS as a language
interpreted language: converted to machine code at run time
dynamically typed: variable type inferred from its value and can change

Stack: frames, last come first serve (the opposite of queue)
Queue: messages, first come first serve (ex. event loop?)

Event Loop
a to-be-run piece of code (a module or functoin) us put in a queue
JS interpreter takes pieces from the queue and executes them one by one
each piece is executed fully, without interruption
...

Variable Declaration
var: used to set variables, declares variables scoped to functions; hoisted, moved to the begining of the function scope
let: declares variable scoped to blocks (aka {}); not hoisted 
const: used to set variables, constant, not supposed to change, 

Data Types
Primitive:
number
bigInt
string
booleannull
undefined
symbol
Non-primitive:
objects (arrays are objects too)

Value VS Reference
Value:
Reference: point to address in memory that contains a value,
    non-primitive type variables contain references
    primitive ...

foo:
bar:

JavaScript Operators
comparison:
<
>
<=
>=
==  compares 
=== exact equality
!=
!==

arithmetic:
+ - * /
--  before (new value returned), after(old value returned?)
++
**

bitwise:
(read on your own)
useful for if you are dealing with audio, video, etc 

logical
&&
||
!   what is true becomes false, and other way around
??

ternary
condition? valTrue: valFalse
cosise if statement

Default Values
f 

Dynamic Number of Inputs

Handling Asynchronous Actions
Call-back function: functions that are called when an event is fired, "old"approach, ...

Promises: objects that represent the current state of operation, can be chained instead of nesting.
    state: pending, rejected, fulfilled

combining Promises
promise.all: returns after all promises resolved or one of them rejected
promise.allSettled: returns after all promises are settled, 
promise.any 
promice.race

Recursion
a function calling itself with new parameters